/**
 * @ledge/external-api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from '../configuration';
import type { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
import { RequestArgs, BaseAPI } from '../base';
import { ExternalUser } from '../models';
import { RegisterUser200Response } from '../models';
import { TrackActivity200Response } from '../models';
import { TrackActivityInput } from '../models';
/**
 * ExternalApi - axios parameter creator
 * @export
 */
export declare const ExternalApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {string} apiKey
     * @param {ExternalUser} externalUser
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    registerUser: (apiKey: string, externalUser: ExternalUser, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} apiKey
     * @param {TrackActivityInput} trackActivityInput
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    trackActivity: (apiKey: string, trackActivityInput: TrackActivityInput, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * ExternalApi - functional programming interface
 * @export
 */
export declare const ExternalApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {string} apiKey
     * @param {ExternalUser} externalUser
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    registerUser(apiKey: string, externalUser: ExternalUser, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<RegisterUser200Response>>;
    /**
     *
     * @param {string} apiKey
     * @param {TrackActivityInput} trackActivityInput
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    trackActivity(apiKey: string, trackActivityInput: TrackActivityInput, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<TrackActivity200Response>>;
};
/**
 * ExternalApi - factory interface
 * @export
 */
export declare const ExternalApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {string} apiKey
     * @param {ExternalUser} externalUser
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    registerUser(apiKey: string, externalUser: ExternalUser, options?: any): AxiosPromise<RegisterUser200Response>;
    /**
     *
     * @param {string} apiKey
     * @param {TrackActivityInput} trackActivityInput
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    trackActivity(apiKey: string, trackActivityInput: TrackActivityInput, options?: any): AxiosPromise<TrackActivity200Response>;
};
/**
 * ExternalApi - object-oriented interface
 * @export
 * @class ExternalApi
 * @extends {BaseAPI}
 */
export declare class ExternalApi extends BaseAPI {
    /**
     *
     * @param {string} apiKey
     * @param {ExternalUser} externalUser
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ExternalApi
     */
    registerUser(apiKey: string, externalUser: ExternalUser, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<RegisterUser200Response, any>>;
    /**
     *
     * @param {string} apiKey
     * @param {TrackActivityInput} trackActivityInput
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ExternalApi
     */
    trackActivity(apiKey: string, trackActivityInput: TrackActivityInput, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<TrackActivity200Response, any>>;
}
